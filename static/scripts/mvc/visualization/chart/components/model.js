define("mvc/visualization/chart/components/model",["exports","utils/utils","mvc/visualization/visualization-model"],function(t,i,e){"use strict";function s(t){return t&&t.__esModule?t:{default:t}}Object.defineProperty(t,"__esModule",{value:!0});var o=s(i),a=s(e);t.default=Backbone.Model.extend({defaults:{title:"",type:"",date:null,state:"",state_info:"",modified:!1,dataset_id:"",dataset_id_job:""},initialize:function(t,i){this.groups=new Backbone.Collection,this.settings=new Backbone.Model,this.definition={},this.viz_options=i,console.debug("model::initialize() - Initialized with configuration:"),console.debug(i)},reset:function(){this.clear().set({title:"New Chart",type:"__first",dataset_id:this.viz_options.dataset_id}),this.settings.clear(),this.groups.reset(),this.groups.add({id:o.default.uid()})},state:function(t,i){this.set({state:t,state_info:i}),this.trigger("set:state"),console.debug("model::state() - "+i+" ("+t+")")},save:function(t){var i=this;t=t||{};var e={attributes:this.attributes,settings:this.settings.attributes,groups:[]};this.groups.each(function(t){e.groups.push(t.attributes)}),new a.default({id:this.viz_options.visualization_id||void 0,type:"charts",title:this.get("title")||"",config:{dataset_id:this.viz_options.dataset_id,chart_dict:this.viz_options.chart_dict=e}}).save().then(function(e){e&&e.id?(i.viz_options.visualization_id=e.id,t.success&&t.success(),console.debug("model::save() - Received visualization id: "+e.id)):(t.error&&t.error(),console.debug("model::save() - Unrecognized response. Saving may have failed."))}).fail(function(i){t.error&&t.error(),console.debug("model::save() - Saving failed.")}),console.debug("model::save() - Saved with configuration:"),console.debug(this.viz_options)},load:function(){console.debug("model::load() - Attempting to load with configuration:"),console.debug(this.viz_options);var t=this.viz_options.chart_dict;return t&&t.attributes?(this.set(t.attributes),this.state("ok","Loading saved visualization..."),this.settings.set(t.settings),this.groups.reset(),this.groups.add(t.groups),this.set("modified",!1),console.debug("model::load() - Loading chart model "+t.attributes.type+"."),this.trigger("redraw"),!0):(console.debug("model::load() - Visualization attributes unavailable."),!1)}})});