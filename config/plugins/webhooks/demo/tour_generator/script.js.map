{"version":3,"sources":["script.js"],"names":["$","document","ready","require","Toastr","Tours","window","TourGenerator","Backbone","View","extend","initialize","options","me","toolId","toolVersion","attr","info","getJSON","tool_id","tool_version","obj","success","data","useDatasets","Galaxy","currHistoryPanel","refreshContents","setTimeout","datasets","numUploadedDatasets","_","each","hids","hid","dataset","collection","where","push","length","get","on","model","_generateTour","tour","warning","console","error","giveTourWithData","end"],"mappings":";AAAAA,EAAEC,QAAF,EAAYC,KAAZ,CAAkB,YAAW;AACzBC,YAAQ,CAAC,aAAD,EAAgB,WAAhB,CAAR,EAAsC,UAASC,MAAT,EAAiBC,KAAjB,EAAwB;AAC1DC,eAAOC,aAAP,GAAuBC,SAASC,IAAT,CAAcC,MAAd,CAAqB;AACxCC,wBAAY,oBAASC,OAAT,EAAkB;AAC1B,oBAAIC,KAAK,IAAT;AACAA,mBAAGC,MAAH,GAAYF,QAAQE,MAApB;AACAD,mBAAGE,WAAH,GAAiBH,QAAQG,WAAzB;;AAEA;AACAf,kBAAE,UAAF,EAAcgB,IAAd,CAAmB,SAAnB,EAA8B,SAA9B;;AAEAZ,uBAAOa,IAAP,CAAY,uCAAZ;AACAjB,kBAAEkB,OAAF,CAAU,oCAAV,EAAgD;AAC5CC,6BAASN,GAAGC,MADgC;AAE5CM,kCAAcP,GAAGE;AAF2B,iBAAhD,EAGG,UAASM,GAAT,EAAc;AACb,wBAAIA,IAAIC,OAAR,EAAiB;AACb,4BAAID,IAAIE,IAAJ,CAASC,WAAb,EAA0B;AACtBC,mCAAOC,gBAAP,CAAwBC,eAAxB,GADsB,CACsB;;AAE5C;AACAC,uCAAW,YAAY;AACnB,oCAAIC,WAAW,EAAf;AAAA,oCACIC,sBAAsB,CAD1B;;AAGAC,kCAAEC,IAAF,CAAOX,IAAIE,IAAJ,CAASU,IAAhB,EAAsB,UAAUC,GAAV,EAAe;AACjC,wCAAIC,UAAUV,OAAOC,gBAAP,CAAwBU,UAAxB,CAAmCC,KAAnC,CAAyC;AACnDH,6CAAKA;AAD8C,qCAAzC,EAEX,CAFW,CAAd;AAGA,wCAAIC,OAAJ,EAAaN,SAASS,IAAT,CAAcH,OAAd;AAChB,iCALD;;AAOA,oCAAIN,SAASU,MAAT,KAAoBlB,IAAIE,IAAJ,CAASU,IAAT,CAAcM,MAAtC,EAA8C;AAC1CR,sCAAEC,IAAF,CAAOH,QAAP,EAAiB,UAAUM,OAAV,EAAmB;AAChC,4CAAIA,QAAQK,GAAR,CAAY,OAAZ,MAAyB,IAA7B,EAAmC;AAC/BV;AACH,yCAFD,MAEO;AACHK,oDAAQM,EAAR,CAAW,cAAX,EAA2B,UAAUC,KAAV,EAAiB;AACxC,oDAAIA,MAAMF,GAAN,CAAU,OAAV,MAAuB,IAA3B,EAAiCV;AACjC;AACA,oDAAIA,wBAAwBD,SAASU,MAArC,EAA6C1B,GAAG8B,aAAH,CAAiBtB,IAAIE,IAAJ,CAASqB,IAA1B;AAChD,6CAJD;AAKH;AACJ,qCAVD;AAWH,iCAZD,MAYO;AACHxC,2CAAOyC,OAAP,CAAe,yBAAf;AACAC,4CAAQC,KAAR,CAAc,2DAAd;AACH;AACJ,6BA3BD,EA2BG,IA3BH;AA4BH,yBAhCD,MAgCO;AACHlC,+BAAG8B,aAAH,CAAiBtB,IAAIE,IAAJ,CAASqB,IAA1B;AACH;AACJ,qBApCD,MAoCO;AACHxC,+BAAOyC,OAAP,CAAe,yBAAf;AACAC,gCAAQC,KAAR,CAAc,qBAAqB1B,IAAI0B,KAAvC;AACH;AACJ,iBA5CD;AA6CH,aAvDuC;;AAyDxCJ,2BAAe,uBAASpB,IAAT,EAAe;AAC1B,oBAAIqB,OAAOvC,MAAM2C,gBAAN,CAAuBzB,IAAvB,CAAX;AACA;AACAvB,kBAAE,UAAF,EAAcyC,EAAd,CAAiB,WAAjB,EAA8B,YAAW;AACrC,wBAAIG,IAAJ,EAAU;AACNA,6BAAKK,GAAL;AACH;AACJ,iBAJD;AAKH;AAjEuC,SAArB,CAAvB;AAmEH,KApED;AAqEH,CAtED","file":"script.js.map","sourcesContent":["$(document).ready(function() {\n    require(['libs/toastr', 'mvc/tours'], function(Toastr, Tours) {\n        window.TourGenerator = Backbone.View.extend({\n            initialize: function(options) {\n                var me = this;\n                me.toolId = options.toolId;\n                me.toolVersion = options.toolVersion;\n\n                // Add attribute 'tour_id' to the execution button\n                $('#execute').attr('tour_id', 'execute');\n\n                Toastr.info('Tour generation might take some time.');\n                $.getJSON('/api/webhooks/tour_generator/data/', {\n                    tool_id: me.toolId,\n                    tool_version: me.toolVersion\n                }, function(obj) {\n                    if (obj.success) {\n                        if (obj.data.useDatasets) {\n                            Galaxy.currHistoryPanel.refreshContents();  // Refresh history panel\n\n                            // Add a delay because of the history panel refreshing\n                            setTimeout(function () {\n                                var datasets = [],\n                                    numUploadedDatasets = 0;\n\n                                _.each(obj.data.hids, function (hid) {\n                                    var dataset = Galaxy.currHistoryPanel.collection.where({\n                                        hid: hid\n                                    })[0];\n                                    if (dataset) datasets.push(dataset);\n                                });\n\n                                if (datasets.length === obj.data.hids.length) {\n                                    _.each(datasets, function (dataset) {\n                                        if (dataset.get('state') === 'ok') {\n                                            numUploadedDatasets++;\n                                        } else {\n                                            dataset.on('change:state', function (model) {\n                                                if (model.get('state') === 'ok') numUploadedDatasets++;\n                                                // Make sure that all test datasets have been successfully uploaded\n                                                if (numUploadedDatasets === datasets.length) me._generateTour(obj.data.tour);\n                                            });\n                                        }\n                                    });\n                                } else {\n                                    Toastr.warning('Cannot generate a tour.');\n                                    console.error('Some of the test datasets cannot be found in the history.');\n                                }\n                            }, 1500);\n                        } else {\n                            me._generateTour(obj.data.tour);\n                        }\n                    } else {\n                        Toastr.warning('Cannot generate a tour.');\n                        console.error('Tour Generator: ' + obj.error);\n                    }\n                });\n            },\n\n            _generateTour: function(data) {\n                var tour = Tours.giveTourWithData(data);\n                // Force ending the tour when pressing the Execute button\n                $('#execute').on('mousedown', function() {\n                    if (tour) {\n                        tour.end();\n                    }\n                });\n            }\n        });\n    });\n});\n"]}